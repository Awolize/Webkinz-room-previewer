version: '3'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile # on move to prod, update this
    volumes:
      - ./frontend/app/api:/home/node/app/api
      - ./frontend/app/components:/home/node/app/components
      - ./frontend/app/pages:/home/node/app/pages
      - ./frontend/app/public:/home/node/app/public
      - ./frontend/app/styles:/home/node/app/styles
    ports:
      - 3000:3000
    networks:
      - frontend
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev # on move to prod, update this
    volumes:
      - /usr/src/app/node_modules
      - ./backend/app:/usr/src/app
    ports:
      - 5000:5000
    # depends_on:
    #   - db
    networks:
      # - db
      - frontend
    restart: unless-stopped

  # db:
  #   container_name: postgres
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-pern_db}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
  #     PGDATA: /var/lib/postgresql/data
  #   volumes:
  #     - ./postgres/data:/var/lib/postgresql/data
  #     - ./postgres/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - db
  #   restart: unless-stopped

  # db_manager:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #   volumes:
  #     - ./postgres/pgadmin:/root/.pgadmin
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   depends_on:
  #     - db
  #   networks:
  #     - db
  #   restart: unless-stopped

networks:
  frontend: null
  # db:
  #   driver: bridge
