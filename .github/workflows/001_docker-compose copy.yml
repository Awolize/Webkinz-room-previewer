name: first-github-action
on: [push]
jobs:
  deploy-on-server:
    runs-on: self-hosted
    steps:
      - name: 🎉 The job was automatically triggered by a ${{ github.event_name }} event.
        run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - name: 🐧 This job is now running on a ${{ runner.os }} server hosted by me!
        run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by me!"
      - name: 🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.
        run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: 🪘 Check out repository code
        uses: actions/checkout@v3
      - name: 💡 The ${{ github.repository }} repository has been cloned to the runner.
        run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: 🖥️ The workflow is now ready to test your code on the runner.
        run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Build & start containers
        run: docker compose -f docker-compose-prod.yml up -d --build --wait
      - name: Check running containers
        run: docker ps --format "{{.Names}} \t{{.ID}} \t{{.Status}}"
      - name: Stop containers

        run: docker compose -f docker-compose-prod.yml down
      - name: 🍏 This job's status is ${{ job.status }}.
        run: echo "🍏 This job's status is ${{ job.status }}."


      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd Dev/webkinz
            sudo su -c 'git pull'
            ./start_prod.sh